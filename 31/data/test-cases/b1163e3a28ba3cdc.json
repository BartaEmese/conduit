{
  "uid" : "b1163e3a28ba3cdc",
  "name" : "test_conduit12",
  "fullName" : "testproject.conduit_tc_012-reg_test#test_conduit12",
  "historyId" : "e011632aa3b12865df24965950f3faae",
  "time" : {
    "start" : 1629105214724,
    "stop" : 1629105237410,
    "duration" : 22686
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 11 == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"53d03699-af90-...belement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"71303bab-3fb9-48d0-acf0-da33e666bfa7\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"cf0dcf24-fa64-...te.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"56f3ad32-3692-44fc-805d-e6862d7bd0cd\")>])",
  "statusTrace" : "def test_conduit12():\n        # Conduit_TC_012_Reg\n        # Saját blogbejegyzés létrehozása és törlése\n        # Előfeltételek:\n        # 1- A gazdagép elérhető\n        # 2- A gazdagépen  fut a Conduit\n        # 3- Chrome Verzió: 91.0.4472.77 (Hivatalos verzió) (64 bites)\n        # 4- OS: Windows 10\n        # 5- Bejelentkezett felhasználó: Email: testuser1@example.com ,  Password: Abcd123$\n        # 6- Szükséges a TC_001, TC_002 és a TC11 tesztek sikeres lefutása\n        # Követelmény: Req.id: R08\n        from selenium import webdriver\n        import time\n        import random\n        import string\n        from selenium.webdriver.chrome.options import Options\n        from webdriver_manager.chrome import ChromeDriverManager\n    \n        options = Options()\n        options.add_argument('--headless')\n    \n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)\n    \n        # Oldal betöltése\n        driver.get(\"http://localhost:1667\")\n        time.sleep(1)\n    \n        # Random cím\n        def get_title(lowers_count):\n            lowers = ''.join((random.choice(string.ascii_lowercase) for i in range(lowers_count)))\n            titles = \"A\" + \" \" + lowers\n            return titles\n    \n        # Random szöveg\n        def get_text(lowers_count):\n            lowers = ''.join((random.choice(string.ascii_lowercase) for i in range(lowers_count)))\n            return lowers\n    \n        # Bejelentkezés függvény\n        def login(email_l, password_l):\n            sign_in = driver.find_element_by_xpath('//a[@href=\"#/login\"]')\n            sign_in.click()\n            email = driver.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n            email.send_keys(email_l)\n            password = driver.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n            password.send_keys(password_l)\n            button = driver.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')\n            button.click()\n            time.sleep(2)\n    \n        # Blogbejegyzés létrehozás függvény\n        def create_article(article_a, about_a, text_a, tag_a):\n            new_article = driver.find_element_by_xpath('//a[@href=\"#/editor\"]')\n            new_article.click()\n            time.sleep(2)\n            article_title = driver.find_element_by_xpath('//input[@placeholder=\"Article Title\"]')\n            article_title.send_keys(article_a)\n            about = driver.find_element_by_xpath(\"//form/fieldset/fieldset[2]/input\")\n            about.send_keys(about_a)\n            text_area = driver.find_element_by_xpath(\"//textarea\")\n            text_area.send_keys(text_a)\n            tags = driver.find_element_by_xpath('//input[@placeholder=\"Enter tags\"]')\n            tags.send_keys(tag_a)\n            publish_article = driver.find_element_by_xpath(\"//button\")\n            publish_article.click()\n            time.sleep(1)\n    \n        # Blogbejegyzés törlése függvény\n        def delete_article():\n            delete_button = driver.find_element_by_xpath('//button[@class=\"btn btn-outline-danger btn-sm\"]')\n            delete_button.click()\n            time.sleep(2)\n    \n        # testuser1 blogbejegyzés megkeresés függvény\n        def user_click():\n            testuser1 = driver.find_element_by_xpath('//li[@class=\"nav-item\"]//a[@href=\"#/@testuser1/\"]')\n            testuser1.click()\n            time.sleep(6)\n    \n        # Blog tesztadat\n        test_list = [get_title(5), get_text(10), get_text(3)]\n    \n        # Bejelentkezés tesztadat\n        email_data = [\"testuser1@example.com\"]\n        password_data = [\"Abcd123$\"]\n    \n        # Bejelentkezés függvény meghívás\n        login(email_data[0], password_data[0])\n    \n        # testuser1 blogbejegyzés megkeresés függvény meghívás\n        user_click()\n    \n        # Blogbejegyzések száma létrehozás előtt\n        article_title_before = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]')\n        print(len(article_title_before))\n    \n        # Blogbejegyzés létrehozás függvény meghívás\n        create_article(test_list[0], test_list[0], test_list[1], test_list[2])\n    \n        # Létrehozott blogbejegyzés adat helyesség vizsgálata\n        title = driver.find_element_by_xpath(\"//h1\")\n        text = driver.find_element_by_xpath(\"//p\")\n        tag = driver.find_element_by_xpath('//a[@class=\"tag-pill tag-default\"]')\n    \n        assert title.text == test_list[0]\n        assert text.text == test_list[1]\n        assert tag.text == test_list[2]\n    \n        # Blogbejegyzés törlése függvény meghívása\n        delete_article()\n    \n        # testuser1 blogbejegyzés megkeresés függvény meghívás\n        user_click()\n    \n        # Blogbejegyzések száma törlés után\n        article_title_after = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]')\n        print(len(article_title_after))\n    \n        # Ellenőrizzük, hogy egyenlő-e a blogbejegyzések száma létrehozás előtt és törlés után\n>       assert len(article_title_before) == len(article_title_after)\nE       assert 11 == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"53d03699-af90-...belement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"71303bab-3fb9-48d0-acf0-da33e666bfa7\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"cf0dcf24-fa64-...te.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"56f3ad32-3692-44fc-805d-e6862d7bd0cd\")>])\n\ntestproject/conduit_tc_012-reg_test.py:120: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 11 == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"53d03699-af90-...belement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"71303bab-3fb9-48d0-acf0-da33e666bfa7\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"cf0dcf24-fa64-...te.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"56f3ad32-3692-44fc-805d-e6862d7bd0cd\")>])",
    "statusTrace" : "def test_conduit12():\n        # Conduit_TC_012_Reg\n        # Saját blogbejegyzés létrehozása és törlése\n        # Előfeltételek:\n        # 1- A gazdagép elérhető\n        # 2- A gazdagépen  fut a Conduit\n        # 3- Chrome Verzió: 91.0.4472.77 (Hivatalos verzió) (64 bites)\n        # 4- OS: Windows 10\n        # 5- Bejelentkezett felhasználó: Email: testuser1@example.com ,  Password: Abcd123$\n        # 6- Szükséges a TC_001, TC_002 és a TC11 tesztek sikeres lefutása\n        # Követelmény: Req.id: R08\n        from selenium import webdriver\n        import time\n        import random\n        import string\n        from selenium.webdriver.chrome.options import Options\n        from webdriver_manager.chrome import ChromeDriverManager\n    \n        options = Options()\n        options.add_argument('--headless')\n    \n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)\n    \n        # Oldal betöltése\n        driver.get(\"http://localhost:1667\")\n        time.sleep(1)\n    \n        # Random cím\n        def get_title(lowers_count):\n            lowers = ''.join((random.choice(string.ascii_lowercase) for i in range(lowers_count)))\n            titles = \"A\" + \" \" + lowers\n            return titles\n    \n        # Random szöveg\n        def get_text(lowers_count):\n            lowers = ''.join((random.choice(string.ascii_lowercase) for i in range(lowers_count)))\n            return lowers\n    \n        # Bejelentkezés függvény\n        def login(email_l, password_l):\n            sign_in = driver.find_element_by_xpath('//a[@href=\"#/login\"]')\n            sign_in.click()\n            email = driver.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n            email.send_keys(email_l)\n            password = driver.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n            password.send_keys(password_l)\n            button = driver.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')\n            button.click()\n            time.sleep(2)\n    \n        # Blogbejegyzés létrehozás függvény\n        def create_article(article_a, about_a, text_a, tag_a):\n            new_article = driver.find_element_by_xpath('//a[@href=\"#/editor\"]')\n            new_article.click()\n            time.sleep(2)\n            article_title = driver.find_element_by_xpath('//input[@placeholder=\"Article Title\"]')\n            article_title.send_keys(article_a)\n            about = driver.find_element_by_xpath(\"//form/fieldset/fieldset[2]/input\")\n            about.send_keys(about_a)\n            text_area = driver.find_element_by_xpath(\"//textarea\")\n            text_area.send_keys(text_a)\n            tags = driver.find_element_by_xpath('//input[@placeholder=\"Enter tags\"]')\n            tags.send_keys(tag_a)\n            publish_article = driver.find_element_by_xpath(\"//button\")\n            publish_article.click()\n            time.sleep(1)\n    \n        # Blogbejegyzés törlése függvény\n        def delete_article():\n            delete_button = driver.find_element_by_xpath('//button[@class=\"btn btn-outline-danger btn-sm\"]')\n            delete_button.click()\n            time.sleep(2)\n    \n        # testuser1 blogbejegyzés megkeresés függvény\n        def user_click():\n            testuser1 = driver.find_element_by_xpath('//li[@class=\"nav-item\"]//a[@href=\"#/@testuser1/\"]')\n            testuser1.click()\n            time.sleep(6)\n    \n        # Blog tesztadat\n        test_list = [get_title(5), get_text(10), get_text(3)]\n    \n        # Bejelentkezés tesztadat\n        email_data = [\"testuser1@example.com\"]\n        password_data = [\"Abcd123$\"]\n    \n        # Bejelentkezés függvény meghívás\n        login(email_data[0], password_data[0])\n    \n        # testuser1 blogbejegyzés megkeresés függvény meghívás\n        user_click()\n    \n        # Blogbejegyzések száma létrehozás előtt\n        article_title_before = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]')\n        print(len(article_title_before))\n    \n        # Blogbejegyzés létrehozás függvény meghívás\n        create_article(test_list[0], test_list[0], test_list[1], test_list[2])\n    \n        # Létrehozott blogbejegyzés adat helyesség vizsgálata\n        title = driver.find_element_by_xpath(\"//h1\")\n        text = driver.find_element_by_xpath(\"//p\")\n        tag = driver.find_element_by_xpath('//a[@class=\"tag-pill tag-default\"]')\n    \n        assert title.text == test_list[0]\n        assert text.text == test_list[1]\n        assert tag.text == test_list[2]\n    \n        # Blogbejegyzés törlése függvény meghívása\n        delete_article()\n    \n        # testuser1 blogbejegyzés megkeresés függvény meghívás\n        user_click()\n    \n        # Blogbejegyzések száma törlés után\n        article_title_after = driver.find_elements_by_xpath('//div[@class=\"article-preview\"]')\n        print(len(article_title_after))\n    \n        # Ellenőrizzük, hogy egyenlő-e a blogbejegyzések száma létrehozás előtt és törlés után\n>       assert len(article_title_before) == len(article_title_after)\nE       assert 11 == 5\nE        +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"53d03699-af90-...belement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"71303bab-3fb9-48d0-acf0-da33e666bfa7\")>, ...])\nE        +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"cf0dcf24-fa64-...te.webelement.WebElement (session=\"c472398a7be314ba39aa6e3bb842ec28\", element=\"56f3ad32-3692-44fc-805d-e6862d7bd0cd\")>])\n\ntestproject/conduit_tc_012-reg_test.py:120: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d1e0cbc80039fb34",
      "name" : "log",
      "source" : "d1e0cbc80039fb34.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "fd3026b031dff00a",
      "name" : "stdout",
      "source" : "fd3026b031dff00a.txt",
      "type" : "text/plain",
      "size" : 5
    }, {
      "uid" : "34f957109beceb2c",
      "name" : "stderr",
      "source" : "34f957109beceb2c.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testproject"
  }, {
    "name" : "suite",
    "value" : "conduit_tc_012-reg_test"
  }, {
    "name" : "host",
    "value" : "fv-az39-798"
  }, {
    "name" : "thread",
    "value" : "3854-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testproject.conduit_tc_012-reg_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "e908dfa8883daecb",
        "reportUrl" : "https://BartaEmese.github.io/conduit/30//#testresult/e908dfa8883daecb",
        "status" : "passed",
        "time" : {
          "start" : 1629058481871,
          "stop" : 1629058504410,
          "duration" : 22539
        }
      }, {
        "uid" : "32fd679576abc36b",
        "reportUrl" : "https://BartaEmese.github.io/conduit/29//#testresult/32fd679576abc36b",
        "status" : "passed",
        "time" : {
          "start" : 1629057871833,
          "stop" : 1629057893392,
          "duration" : 21559
        }
      }, {
        "uid" : "89dc9bfa6127d80f",
        "reportUrl" : "https://BartaEmese.github.io/conduit/28//#testresult/89dc9bfa6127d80f",
        "status" : "passed",
        "time" : {
          "start" : 1629057391681,
          "stop" : 1629057414352,
          "duration" : 22671
        }
      }, {
        "uid" : "31d7b8e9e29bf9ff",
        "reportUrl" : "https://BartaEmese.github.io/conduit/26//#testresult/31d7b8e9e29bf9ff",
        "status" : "passed",
        "time" : {
          "start" : 1629057006459,
          "stop" : 1629057027884,
          "duration" : 21425
        }
      }, {
        "uid" : "9c3ef50cb888435b",
        "reportUrl" : "https://BartaEmese.github.io/conduit/27//#testresult/9c3ef50cb888435b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 11 == 5\n +  where 11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5b051a7d2c2fed64dfd076fdc96bd08b\", element=\"d2d1e14e-33ef-...belement.WebElement (session=\"5b051a7d2c2fed64dfd076fdc96bd08b\", element=\"bf8d40ba-c8c3-40e4-9f1b-2e6a57acfb5b\")>, ...])\n +  and   5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5b051a7d2c2fed64dfd076fdc96bd08b\", element=\"fc9eec1a-c373-...te.webelement.WebElement (session=\"5b051a7d2c2fed64dfd076fdc96bd08b\", element=\"bfb795f8-f1f1-430b-beb9-48d71cc1fb08\")>])",
        "time" : {
          "start" : 1629056397576,
          "stop" : 1629056420076,
          "duration" : 22500
        }
      }, {
        "uid" : "6f073e008a209e93",
        "reportUrl" : "https://BartaEmese.github.io/conduit/26//#testresult/6f073e008a209e93",
        "status" : "passed",
        "time" : {
          "start" : 1629056321272,
          "stop" : 1629056343673,
          "duration" : 22401
        }
      }, {
        "uid" : "3770d319b371f43d",
        "reportUrl" : "https://BartaEmese.github.io/conduit/25//#testresult/3770d319b371f43d",
        "status" : "passed",
        "time" : {
          "start" : 1629055890889,
          "stop" : 1629055912327,
          "duration" : 21438
        }
      }, {
        "uid" : "c7a25fa742f0b822",
        "reportUrl" : "https://BartaEmese.github.io/conduit/24//#testresult/c7a25fa742f0b822",
        "status" : "passed",
        "time" : {
          "start" : 1629054939030,
          "stop" : 1629054960575,
          "duration" : 21545
        }
      }, {
        "uid" : "c8cc32ac8641f608",
        "reportUrl" : "https://BartaEmese.github.io/conduit/23//#testresult/c8cc32ac8641f608",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 5 == 11\n +  where 5 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"78915ac63531a7c155031c3bc0c0c668\", element=\"21a5736c-e613-...te.webelement.WebElement (session=\"78915ac63531a7c155031c3bc0c0c668\", element=\"d5fae935-1657-42ff-b993-3f50041da38b\")>])\n +  and   11 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"78915ac63531a7c155031c3bc0c0c668\", element=\"ebf34090-492e-...belement.WebElement (session=\"78915ac63531a7c155031c3bc0c0c668\", element=\"4dac209d-6447-4df8-97a2-b242c75f6d73\")>, ...])",
        "time" : {
          "start" : 1629054153524,
          "stop" : 1629054174992,
          "duration" : 21468
        }
      }, {
        "uid" : "26c0b11a629d84fa",
        "reportUrl" : "https://BartaEmese.github.io/conduit/22//#testresult/26c0b11a629d84fa",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)",
        "time" : {
          "start" : 1629053655802,
          "stop" : 1629053656985,
          "duration" : 1183
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b1163e3a28ba3cdc.json",
  "parameterValues" : [ ]
}